@page
@model CryptoApp.Pages.ExchangeModel
@{
    ViewData["Title"] = "Razmena fajlova (TCP)";
}

<style>
    .exchange-section {
        padding: 2rem;
        background-color: #1e1e2f;
        color: #eee;
        border-radius: 12px;
        max-width: 800px;
        margin: auto;
        box-shadow: 0 0 15px rgba(0,0,0,0.3);
    }

        .exchange-section h1 {
            color: #7b4ae2;
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .exchange-section h3 {
            color: #bbb;
            margin-top: 2rem;
            margin-bottom: 1rem;
        }

        .exchange-section table th,
        .exchange-section table td {
            padding: 0.5rem;
            border-bottom: 1px solid #444;
        }

        .exchange-section button,
        .exchange-section input[type="submit"] {
            background-color: #7b4ae2;
            border: none;
            color: white;
            padding: 0.6rem 1.2rem;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
        }

            .exchange-section button:hover,
            .exchange-section input[type="submit"]:hover {
                background-color: #9f7eff;
            }

        .exchange-section a {
            color: #9f7eff;
            text-decoration: none;
        }

            .exchange-section a:hover {
                text-decoration: underline;
            }

    .status-message {
        color: #6fcf97;
        font-weight: 600;
        margin-top: 1rem;
    }
</style>

<div class="exchange-section">
    <h1>Razmena fajlova (TCP)</h1>

    @if (!Model.IsFileExchangeEnabled)
    {
        <p style="color:yellow; font-weight:bold;">
            Razmena fajlova nije uključena.<br />
            Molimo vas da u podešavanjima aplikacije uključite razmenu fajlova (TCP) kako biste mogli da delite fajlove i vidite listu podeljenih.
        </p>
    }
    else
    {
        <form method="post" enctype="multipart/form-data">
            <h3>Pošalji fajl</h3>
            <div class="mb-3">
                <label class="form-label">Izaberite fajl:</label>
                <input type="file" name="UploadFile" class="form-control bg-dark text-light" />
            </div>

            <div class="mb-3">
                <label class="form-label">IP adresa primaoca:</label>
                <input type="text" name="IpAddress" value="127.0.0.1" class="form-control bg-dark text-light" />
            </div>

            <div class="mb-3">
                <input type="submit" name="action" value="Pošalji fajl" />
            </div>
        </form>

        <hr />

        <h3>Slušanje</h3>
        <form method="post">
            <button type="submit" name="action" value="Slušaj za fajl" @(Model.IsListening ? "disabled" : "")>Slušaj</button>
            <button type="submit" name="action" value="Zaustavi slušanje" @(Model.IsListening ? "" : "disabled")>Zaustavi</button>
        </form>

        @if (!string.IsNullOrEmpty(Model.StatusMessage))
        {
            <p class="status-message">@Model.StatusMessage</p>
        }

        @if (Model.IsListening)
        {
            <hr />
            <h3>Primljeni fajlovi</h3>
            @if (Model.ReceivedFiles.Count == 0)
            {
                <p>Nema primljenih fajlova.</p>
            }
            else
            {
                <table style="width:100%;color:#eee">
                    <thead><tr><th>Ime</th><th>Akcija</th></tr></thead>
                    <tbody id="receivedFilesList">
                        @foreach (var file in Model.ReceivedFiles)
                        {
                            <tr>
                                <td>@file</td>
                                <td>
                                    <a href="~/received/@file" download>⬇ Preuzmi</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            <script>
                async function fetchReceivedFiles() {
                    try {
                        const response = await fetch('/Exchange?handler=ReceivedFiles');
                        const files = await response.json();

                        const list = document.getElementById('receivedFilesList');
                        list.innerHTML = '';

                        files.forEach(file => {
                            const tr = document.createElement('tr');

                            const tdName = document.createElement('td');
                            tdName.textContent = file;

                            const tdAction = document.createElement('td');
                            const link = document.createElement('a');
                            link.href = `/received/${file}`;
                            link.download = file;
                            link.textContent = '⬇ Preuzmi';
                            tdAction.appendChild(link);

                            tr.appendChild(tdName);
                            tr.appendChild(tdAction);
                            list.appendChild(tr);
                        });
                    } catch (err) {
                        console.error('Greška prilikom osvežavanja liste:', err);
                    }
                }

                setInterval(fetchReceivedFiles, 5000);
                refreshReceivedFiles();
            </script>
        }
    }
</div>
